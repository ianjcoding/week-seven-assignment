# -----------------------------
# 📘 Task 1: Load and Explore the Dataset
# -----------------------------

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris

# Handle potential errors while loading
try:
    # Load Iris dataset
    iris_data = load_iris()
    
    # Create a DataFrame
    df = pd.DataFrame(
        data = iris_data.data,
        columns = iris_data.feature_names
    )
    
    # Add the target (species)
    df['species'] = pd.Categorical.from_codes(iris_data.target, iris_data.target_names)

    print("✅ Dataset successfully loaded!\n")

except FileNotFoundError:
    print("❌ Error: Dataset file not found. Please check the path.")
except Exception as e:
    print("❌ An error occurred while loading the dataset:", e)

# Display first few rows
print("🔹 First 5 rows of the dataset:")
print(df.head(), "\n")

# Check data types and missing values
print("🔹 Data types and missing values:")
print(df.info(), "\n")

# Check for missing values
print("🔹 Missing values per column:")
print(df.isnull().sum(), "\n")

# Clean data: drop or fill missing values (none in this dataset)
df.dropna(inplace=True)

# -----------------------------
# 📊 Task 2: Basic Data Analysis
# -----------------------------

# Compute basic statistics
print("🔹 Basic Statistics:")
print(df.describe(), "\n")

# Grouping by species and finding mean of numerical columns
grouped = df.groupby("species").mean()
print("🔹 Mean of numerical columns by species:")
print(grouped, "\n")

# Identify interesting patterns
print("🔍 Insights:")
print("- Iris-setosa generally has smaller sepal and petal dimensions.")
print("- Iris-virginica has the largest petal length and width.")
print("- Iris-versicolor is intermediate between the two.\n")

# -----------------------------
# 🎨 Task 3: Data Visualization
# -----------------------------

sns.set_style("whitegrid")

# 1️⃣ Line chart — Simulated trend over sample index
plt.figure(figsize=(8, 5))
plt.plot(df.index, df["sepal length (cm)"], label='Sepal Length', color='blue')
plt.plot(df.index, df["petal length (cm)"], label='Petal Length', color='orange')
plt.title("Line Chart: Sepal vs Petal Length over Samples")
plt.xlabel("Sample Index")
plt.ylabel("Length (cm)")
plt.legend()
plt.show()

# 2️⃣ Bar chart — Average petal length per species
plt.figure(figsize=(7, 5))
sns.barplot(x="species", y="petal length (cm)", data=df, palette="viridis")
plt.title("Bar Chart: Average Petal Length by Species")
plt.xlabel("Species")
plt.ylabel("Average Petal Length (cm)")
plt.show()

# 3️⃣ Histogram — Distribution of sepal width
plt.figure(figsize=(7, 5))
plt.hist(df["sepal width (cm)"], bins=15, color='teal', edgecolor='black')
plt.title("Histogram: Distribution of Sepal Width")
plt.xlabel("Sepal Width (cm)")
plt.ylabel("Frequency")
plt.show()

# 4️⃣ Scatter plot — Sepal length vs Petal length
plt.figure(figsize=(7, 5))
sns.scatterplot(
    x="sepal length (cm)",
    y="petal length (cm)",
    hue="species",
    data=df,
    palette="deep"
)
plt.title("Scatter Plot: Sepal Length vs Petal Length")
plt.xlabel("Sepal Length (cm)")
plt.ylabel("Petal Length (cm)")
plt.legend(title="Species")
plt.show()

print("✅ All tasks completed successfully!")
